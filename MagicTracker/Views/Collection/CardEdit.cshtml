@model MagicTracker.Models.CardApi.ApiCardView
@using Newtonsoft.Json

@{
    ViewBag.Title = "CardEdit";
}

<h2>Card Import Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <table class="table">
            <tr>
                <th>Name</th>
                <th>Set</th>
                <th>Card Condition</th>
                <th>Foil</th>
                <th>In Use</th>
                <th>For Trade</th>
                <th>Deck</th>
            </tr>
            @Html.HiddenFor(model => model.Card.MultiverseId)
            @Html.HiddenFor(model => model.Card.CardApiId)
            @Html.HiddenFor(model => model.Card.CardId)
            @Html.HiddenFor(model => model.Card.Name)

            @Html.HiddenFor(model => model.Api)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Card.Name, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </td>

                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Card.Printing,
                            new SelectList(JsonConvert.DeserializeObject<Dictionary<string, string>>(Model.Api.SetNameDict), "Key", "Value"),
                            new { htmlAttributes = new { @class = "form-control" } }
                            )
                        </div>
                    </div>
                </td>

                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Card.CardCondition,
                                new SelectList(Enum.GetValues(typeof(MagicTracker.Data.Condition))),
                                new { htmlAttributes = new { @class = "form-control" } }
                                )
                            @Html.ValidationMessageFor(model => model.Card.CardCondition, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>

                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Card.IsFoil)
                                @Html.ValidationMessageFor(model => model.Card.IsFoil, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </td>

                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Card.InUse)
                                @Html.ValidationMessageFor(model => model.Card.InUse, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </td>

                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Card.ForTrade)
                                @Html.ValidationMessageFor(model => model.Card.ForTrade, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </td>

                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Card.DeckId,
                            new SelectList(Model.DeckDict, "Value", "Key"),
                            new { htmlAttributes = new { @class = "form-control" } }
                            )
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
