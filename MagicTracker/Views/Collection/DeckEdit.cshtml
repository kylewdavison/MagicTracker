@model MagicTracker.Models.CollectionItem[]

@{
    ViewBag.Title = "DeckEdit";
}

<h2>DeckEdit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <table class="table">
            <tr>
                <th>Card ID</th>
                <th>Name</th>
                <th>Set</th>
                <th>Card Condition</th>
                <th>Foil</th>
                <th>In Use</th>
                <th>For Trade</th>
            </tr>
            @for (int i = 0; i < Model.Length; i++)
            {
                @Html.HiddenFor(model => model[i].MultiverseId)
                @Html.HiddenFor(model => model[i].CardApiId)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <tr>
                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model[i].CardId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model[i].CardId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model[i].Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>

                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model[i].Printing, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model[i].Printing, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>

                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model[i].CardCondition, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model[i].CardCondition, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>

                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model[i].IsFoil)
                                    @Html.ValidationMessageFor(model => model[i].IsFoil, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </td>

                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model[i].InUse)
                                    @Html.ValidationMessageFor(model => model[i].InUse, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </td>

                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model[i].ForTrade)
                                    @Html.ValidationMessageFor(model => model[i].ForTrade, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </td>

                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model[i].DeckId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model[i].DeckId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "DeckIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
